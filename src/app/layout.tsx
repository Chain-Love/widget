import type { Metadata } from 'next';
import { HydrationBoundary, dehydrate } from '@tanstack/react-query';

import { inter, manrope } from './fonts';
import './globals.css';
import { getQueryClient } from '@/service/get-query-client';
import { configFetchOptions } from '@/service/configApi';
import { headers } from 'next/headers';
import { Providers } from '@/providers';
import { Suspense } from 'react';
import PageLoading from '@/components/ui/page-loading';
import { Toaster } from '@/components/ui/shadcn/sonner';

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const headersList = headers();

  const host = headersList.get('host');

  const origin = `http://${host}`;

  const queryClient = getQueryClient();
  await queryClient.prefetchQuery(configFetchOptions(origin));

  return (
    <html
      lang='en'
      suppressHydrationWarning
      className={`${inter.variable} ${manrope.variable}`}
    >
      <body>
        <Providers>
          <HydrationBoundary state={dehydrate(queryClient)}>
            <div className='flex min-h-dvh flex-col'>
              <Suspense fallback={<PageLoading />}>{children}</Suspense>

              <Toaster />
            </div>
          </HydrationBoundary>
        </Providers>
      </body>
    </html>
  );
}
